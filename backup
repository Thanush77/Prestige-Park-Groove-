import 'package:flutter/material.dart';
import 'package:url_launcher/url_launcher.dart';
import 'package:flutter_pdfview/flutter_pdfview.dart';
void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Namer App',
      theme: ThemeData(
        useMaterial3: true,
        colorScheme: ColorScheme.fromSeed(seedColor: const Color.fromARGB(255, 33, 174, 184)),
      ),
      home: const LoginPage(),
    );
  }
}

class LoginPage extends StatefulWidget {
  const LoginPage({Key? key}) : super(key: key);

  @override
  State<LoginPage> createState() => _LoginPageState();
}

class _LoginPageState extends State<LoginPage> {
  final TextEditingController _usernameController = TextEditingController();
  final TextEditingController _passwordController = TextEditingController();

  Future<void> _openWebsite(String url) async {
    if (await canLaunch(url)) {
      await launch(url);
    } else {
      throw 'Could not open $url';
    }
  }

  void _login() {
    if (_usernameController.text == 'thanush' &&
        _passwordController.text == 'user_123') {
      Navigator.pushReplacement(
        context,
        MaterialPageRoute(builder: (context) => const MyHomePage()),
      );
    } else {
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(content: Text('Invalid credentials')),
      );
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Sustainable Infra Development'),
        backgroundColor: Colors.teal,
      ),
      body: Center(
        child: SingleChildScrollView(
          padding: const EdgeInsets.all(16.0),
          child: Column(
            children: [
              // Logos section
              Column(
                children: [
                  GestureDetector(
                    onTap: () => _openWebsite('https://www.prestigeconstructions.com'),
                    child: Image.asset('assets/prestigelogo.png', height: 80, fit: BoxFit.cover),
                  ),
                  const SizedBox(height: 20),
                  Row(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: [
                      GestureDetector(
                        onTap: () => _openWebsite('https://www.iisc.ac.in'),
                        child: Image.asset('assets/iisclogo.png', height: 80, fit: BoxFit.cover),
                      ),
                      const SizedBox(width: 16),
                      GestureDetector(
                        onTap: () => _openWebsite('https://www.larsentoubro.com'),
                        child: Image.asset('assets/L&T.png', height: 80, fit: BoxFit.cover),
                      ),
                    ],
                  ),
                ],
              ),
              const SizedBox(height: 30),

              // Login card
              Card(
                elevation: 8,
                margin: const EdgeInsets.symmetric(horizontal: 16),
                shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(10)),
                child: Padding(
                  padding: const EdgeInsets.all(20.0),
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.center,
                    children: [
                      const Text(
                        'Sustainable Infra Development',
                        style: TextStyle(
                          fontSize: 24,
                          fontWeight: FontWeight.bold,
                          color: Colors.black87,
                        ),
                        textAlign: TextAlign.center,
                      ),
                      const SizedBox(height: 8),
                      const Text(
                        'Icon Group Bangalore',
                        style: TextStyle(
                          fontSize: 16,
                          fontWeight: FontWeight.bold,
                          color: Colors.black54,
                        ),
                        textAlign: TextAlign.center,
                      ),
                      const SizedBox(height: 20),
                      TextField(
                        controller: _usernameController,
                        decoration: const InputDecoration(
                          labelText: 'Username',
                          border: OutlineInputBorder(),
                          prefixIcon: Icon(Icons.person),
                        ),
                      ),
                      const SizedBox(height: 16),
                      TextField(
                        controller: _passwordController,
                        obscureText: true,
                        decoration: const InputDecoration(
                          labelText: 'Password',
                          border: OutlineInputBorder(),
                          prefixIcon: Icon(Icons.lock),
                        ),
                      ),
                      const SizedBox(height: 20),
                      ElevatedButton(
                        onPressed: _login,
                        style: ElevatedButton.styleFrom(
                          padding: const EdgeInsets.symmetric(vertical: 15),
                          backgroundColor: Colors.teal,
                        ),
                        child: const Text('Login', style: TextStyle(fontSize: 18)),
                      ),
                    ],
                  ),
                ),
              ),
              const SizedBox(height: 20),

              // Sign-up text
              const Text(
                'Not yet registered? Sign up now',
                style: TextStyle(fontSize: 14, color: Colors.black87),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
class MyHomePage extends StatelessWidget {
  const MyHomePage({super.key});

  // Function to open URLs in the default browser
  Future<void> _openWebsite(String url) async {
    final Uri uri = Uri.parse(url);
    if (await canLaunchUrl(uri)) {
      await launchUrl(uri, mode: LaunchMode.externalApplication);
    } else {
      throw 'Could not launch $url';
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Home Page'),
        backgroundColor: Colors.green[700],
      ),
      drawer: const CustomDrawer(), // Use the CustomDrawer here
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            // Header Text
            Container(
              padding: const EdgeInsets.all(16.0),
              color: Colors.green[100],
              child: const Text(
                'Sustainable Infra Development',
                style: TextStyle(
                  fontSize: 24,
                  fontWeight: FontWeight.bold,
                  color: Colors.black,
                ),
                textAlign: TextAlign.center,
              ),
            ),
            const SizedBox(height: 20),

            // Logo Row with Clickable Images
            Row(
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                InkWell(
                  onTap: () => _openWebsite("https://www.prestigeconstructions.com"),
                  child: Image.asset(
                    'assets/prestigelogo.png',
                    width: 100,
                    height: 80,
                    fit: BoxFit.contain,
                  ),
                ),
                const SizedBox(width: 20),
                InkWell(
                  onTap: () => _openWebsite("https://www.iisc.ac.in"),
                  child: Image.asset(
                    'assets/iisclogo.png',
                    width: 100,
                    height: 80,
                    fit: BoxFit.contain,
                  ),
                ),
                const SizedBox(width: 20),
                InkWell(
                  onTap: () => _openWebsite("https://www.larsentoubro.com"),
                  child: Image.asset(
                    'assets/L&T.png',
                    width: 100,
                    height: 80,
                    fit: BoxFit.contain,
                  ),
                ),
              ],
            ),
            const Spacer(),

            // 'Park Grove' Button
            ElevatedButton(
              onPressed: () {
                // Action for Park Grove button
              },
              style: ElevatedButton.styleFrom(
                padding: const EdgeInsets.symmetric(vertical: 20, horizontal: 40),
                backgroundColor: Colors.green[700], 
                textStyle: const TextStyle(fontSize: 28),
              ),
              child: const Text('Park Grove'),
            ),
            const SizedBox(height: 20),
          ],
        ),
      ),
    );
  }
}

class CustomDrawer extends StatelessWidget {
  const CustomDrawer({super.key});

  Future<void> _launchURL(String urlString) async {
    final Uri url = Uri.parse(urlString);
    if (await canLaunchUrl(url)) {
      await launchUrl(url, mode: LaunchMode.externalApplication);
    } else {
      throw 'Could not launch $url';
    }
  }

  @override
  Widget build(BuildContext context) {
    return Drawer(
      child: SingleChildScrollView(
        child: Column(
          children: [
            Container(
              color: Colors.blue,
              child: SafeArea(
                bottom: false,
                child: Padding(
                  padding: const EdgeInsets.all(16.0),
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      GestureDetector(
                        onTap: () => _launchURL('https://www.example.com'),
                        child: Image.asset(
                          'assets/prestigelogo.png',
                          height: 50,
                          fit: BoxFit.contain,
                        ),
                      ),
                      const SizedBox(height: 16),
                      const Text(
                        'Sustainable Infra Development',
                        style: TextStyle(
                          color: Colors.white,
                          fontSize: 18,
                          fontWeight: FontWeight.bold,
                        ),
                      ),
                      const SizedBox(height: 8),
                      const Text(
                        'EEPl St Jones Church Road\nBangalore 560001',
                        style: TextStyle(
                          color: Colors.white,
                          fontSize: 13,
                        ),
                      ),
                      const SizedBox(height: 4),
                      const Text(
                        'thanush@gmail.com',
                        style: TextStyle(
                          color: Colors.white,
                          fontSize: 13,
                        ),
                      ),
                    ],
                  ),
                ),
              ),
            ),
            ListView(
              shrinkWrap: true,
              physics: const NeverScrollableScrollPhysics(),
              padding: const EdgeInsets.symmetric(vertical: 8),
              children: [
                _buildDrawerItem(
                  context,
                  'Home',
                  Icons.home,
                  () => Navigator.push(
                    context,
                    MaterialPageRoute(builder: (context) => const MyHomePage()),
                  ),
                ),
                _buildDrawerItem(
                  context,
                  'Approvals',
                  Icons.approval,
                  () => Navigator.push(
                    context,
                    MaterialPageRoute(builder: (context) => const ApprovalsPage()),
                  ),
                ),
                _buildDrawerItem(
                  context,
                  'Water Consumption',
                  Icons.water_drop,
                  () => Navigator.push(
                    context,
                    MaterialPageRoute(builder: (context) => const WaterConsumptionPage()),
                  ),
                ),
                _buildDrawerItem(
                  context,
                  'Air Pollution',
                  Icons.air,
                  () => Navigator.push(
                    context,
                    MaterialPageRoute(builder: (context) => const BlankPage(title: 'Air Pollution')),
                  ),
                ),
                _buildDrawerItem(
                  context,
                  'Solid Waste',
                  Icons.delete_outline,
                  () => Navigator.push(
                    context,
                    MaterialPageRoute(builder: (context) => const BlankPage(title: 'Solid Waste')),
                  ),
                ),
                _buildDrawerItem(
                  context,
                  'Ground Water',
                  Icons.water,
                  () => Navigator.push(
                    context,
                    MaterialPageRoute(builder: (context) => const BlankPage(title: 'Ground Water')),
                  ),
                ),
                _buildDrawerItem(
                  context,
                  'Rain Water',
                  Icons.water_damage,
                  () => Navigator.push(
                    context,
                    MaterialPageRoute(builder: (context) => const BlankPage(title: 'Rain Water')),
                  ),
                ),
                _buildDrawerItem(
                  context,
                  'About Us',
                  Icons.info_outline,
                  () => Navigator.push(
                    context,
                    MaterialPageRoute(builder: (context) => const BlankPage(title: 'About Us')),
                  ),
                ),
                const Divider(),
                _buildDrawerItem(
                  context,
                  'Logout',
                  Icons.logout,
                  () => Navigator.pushReplacement(
                    context,
                    MaterialPageRoute(builder: (context) => const LoginPage()),
                  ),
                ),
              ],
            ),
          ],
        ),
      ),
    );
  }

  Widget _buildDrawerItem(
    BuildContext context,
    String title,
    IconData icon,
    VoidCallback onTap,
  ) {
    return ListTile(
      leading: Icon(icon, color: Colors.blue[800]),
      title: Text(
        title,
        style: const TextStyle(fontSize: 16),
      ),
      onTap: onTap,
      dense: true,
      visualDensity: const VisualDensity(horizontal: -4, vertical: -2),
    );
  }
}

class ApprovalsPage extends StatelessWidget {
  const ApprovalsPage({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Approvals'),
      ),
      body: ListView(
        padding: const EdgeInsets.all(16.0),
        children: [
          const Text('Select Approval Type:', style: TextStyle(fontSize: 20)),
          const SizedBox(height: 16),
          ElevatedButton(
            onPressed: () {
              // Open a PDF URL for Environmental Clearances
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => const PDFViewPage(url: 'https://pdfobject.com/pdf/sample.pdf'),
                ),
              );
            },
            child: const Text('KSPCB'),
          ),
          ElevatedButton(
            onPressed: () {
              // Open a PDF URL for BBMP Plan Sanction Paper
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => const PDFViewPage(url: 'https://pdfobject.com/pdf/sample.pdf'),
                ),
              );
            },
            child: const Text('Environmental Clearences'),
          ),
          ElevatedButton(
            onPressed: () {
              // Open a PDF URL for Land Document
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => const PDFViewPage(url: 'https://pdfobject.com/pdf/sample.pdf'),
                ),
              );
            },
            child: const Text('BBMP Plan Sanction Paper'),
          ),
          ElevatedButton(
            onPressed: () {
              // Open a PDF URL for SGWA
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => const PDFViewPage(url: 'https://pdfobject.com/pdf/sample.pdf'),
                ),
              );
            },
            child: const Text('Land Document'),
          ),
          ElevatedButton(
            onPressed: () {
              // Open a PDF URL for Fire NOC
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => const PDFViewPage(url: 'https://pdfobject.com/pdf/sample.pdf'),
                ),
              );
            },
            child: const Text('SGWA'),
          ),
          ElevatedButton(
            onPressed: () {
              // Open a PDF URL for Airport Clearances
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => const PDFViewPage(url: 'https://pdfobject.com/pdf/sample.pdf'),
                ),
              );
            },
            child: const Text('Fire NOC'),
          ),
          ElevatedButton(
            onPressed: () {
              // Open a PDF URL for BESCOM
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => const PDFViewPage(url: 'https://pdfobject.com/pdf/sample.pdf'),
                ),
              );
            },
            child: const Text('Airport Clearences'),
          ),
          ElevatedButton(
            onPressed: () {
              // Navigate to the KSPCBPage
              Navigator.push(
                context,
                MaterialPageRoute(builder: (context) => const KSPCBPage()),
              );
            },
            child: const Text('BESCOM Clearences'),
          ),
          
          ElevatedButton(
            onPressed: () {
              // Navigate to the KSPCBPage
              Navigator.push(
                context,
                MaterialPageRoute(builder: (context) => const KSPCBPage()),
              );
            },
            child: const Text('Land Conversion'),
          ),
        ],
      ),
    );
  }
}

class KSPCBPage extends StatelessWidget {
  const KSPCBPage({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('KSPCB'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            const Text('KSPCB Approvals', style: TextStyle(fontSize: 24)),
            const SizedBox(height: 20),
            ElevatedButton(
              onPressed: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => const BlankPage(title: 'Approval 1')),
                );
              },
              child: const Text('Approval 1'),
            ),
            ElevatedButton(
              onPressed: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => const BlankPage(title: 'Approval 2')),
                );
              },
              child: const Text('Approval 2'),
            ),
          ],
        ),
      ),
    );
  }
}

class PDFViewPage extends StatelessWidget {
  final String? assetPath;
  final String? url;

  const PDFViewPage({super.key, this.assetPath, this.url});

  @override
  Widget build(BuildContext context) {
    if (url != null) {
      // Use a browser to open the URL if it’s an online PDF
      return Scaffold(
        appBar: AppBar(
          title: const Text('PDF Viewer'),
        ),
        body: Center(
          child: ElevatedButton(
            onPressed: () async {
              final Uri uri = Uri.parse(url!);
              if (await canLaunchUrl(uri)) {
                await launchUrl(uri, mode: LaunchMode.externalApplication);
              } else {
                throw 'Could not launch $url';
              }
            },
            child: const Text('Open PDF in Browser'),
          ),
        ),
      );
    } else if (assetPath != null) {
      // Use PDFView widget to display local asset PDFs
      return Scaffold(
        appBar: AppBar(
          title: const Text('PDF Viewer'),
        ),
        body: PDFView(
          filePath: assetPath,
        ),
      );
    } else {
      return Scaffold(
        appBar: AppBar(
          title: const Text('PDF Viewer'),
        ),
        body: const Center(
          child: Text('No PDF file specified.'),
        ),
      );
    }
  }
}


class BlankPage extends StatelessWidget {
  final String title;

  const BlankPage({super.key, required this.title});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(title),
      ),
      body: Center(
        child: Text('Welcome to $title Page!'),
      ),
    );
  }
}

class WaterConsumptionPage extends StatelessWidget {
  const WaterConsumptionPage({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Water Consumption'),
      ),
      body: Center(
        child: ElevatedButton(
          onPressed: () {
            Navigator.push(
              context,
              MaterialPageRoute(builder: (context) => const ProjectLabourColonyPage()),
            );
          },
          child: const Text('Project and Labour Colony'),
        ),
      ),
    );
  }
}

class ProjectLabourColonyPage extends StatelessWidget {
  const ProjectLabourColonyPage({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Project and Labour Colony'),
      ),
      body: ListView(
        padding: const EdgeInsets.all(16.0),
        children: [
          ElevatedButton(
            onPressed: () => Navigator.push(context, MaterialPageRoute(builder: (context) => const ProjectOptionsPage())),
            child: const Text('Project'),
          ),
          ElevatedButton(
            onPressed: () {
              // Here you can navigate to Labour Colony if you implement it
            },
            child: const Text('Labour Colony'),
          ),
        ],
      ),
    );
  }
}

class ProjectOptionsPage extends StatelessWidget {
  const ProjectOptionsPage({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Project Options'),
      ),
      body: ListView(
        padding: const EdgeInsets.all(16.0),
        children: [
          ElevatedButton(
            onPressed: () {
              Navigator.push(context, MaterialPageRoute(builder: (context) => const SourcePage()));
            },
            child: const Text('Source'),
          ),
          ElevatedButton(
            onPressed: () {
              Navigator.push(context, MaterialPageRoute(builder: (context) => const ConsumptionPage()));
            },
            child: const Text('Consumption'),
          ),
          ElevatedButton(
            onPressed: () {
              Navigator.push(context, MaterialPageRoute(builder: (context) => const SewagePage()));
            },
            child: const Text('Sewage'),
          ),
        ],
      ),
    );
  }
}

class SourcePage extends StatelessWidget {
  const SourcePage({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Source'),
      ),
      body: ListView(
        padding: const EdgeInsets.all(16.0),
        children: [
          ElevatedButton(
            onPressed: () => Navigator.push(context, MaterialPageRoute(builder: (context) => const SourceDetailsPage(source: 'Borewell'))),
            child: const Text('Borewell'),
          ),
          ElevatedButton(
            onPressed: () => Navigator.push(context, MaterialPageRoute(builder: (context) => const SourceDetailsPage(source: 'BWSSB'))),
            child: const Text('BWSSB'),
          ),
          ElevatedButton(
            onPressed: () => Navigator.push(context, MaterialPageRoute(builder: (context) => const SourceDetailsPage(source: 'Tankers'))),
            child: const Text('Tankers'),
          ),
        ],
      ),
    );
  }
}

class SourceDetailsPage extends StatelessWidget {
  final String source;
  const SourceDetailsPage({super.key, required this.source});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(source),
      ),
      body: Center(child: Text('Details about $source')),
    );
  }
}

class ConsumptionPage extends StatelessWidget {
  const ConsumptionPage({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Consumption'),
      ),
      body: Column(
        children: [
          const Text('Consumption Details', style: TextStyle(fontSize: 24)),
          const SizedBox(height: 16),
          Expanded(
            child: SingleChildScrollView(
              child: DataTable(
                columns: const [
                  DataColumn(label: Text('Date')),
                  DataColumn(label: Text('Source')),
                  DataColumn(label: Text('Consumption (KLD)')),
                ],
                rows: const [],
              ),
            ),
          ),
          ElevatedButton(
            onPressed: () {
              // Add functionality to filter data here
            },
            child: const Text('Filter by Date'),
          ),
        ],
      ),
    );
  }
}

class SewagePage extends StatelessWidget {
  const SewagePage({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Sewage'),
      ),
      body: ListView(
        padding: const EdgeInsets.all(16.0),
        children: [
          ElevatedButton(
            onPressed: () {
              Navigator.push(context, MaterialPageRoute(builder: (context) => const StpPage()));
            },
            child: const Text('STP'),
          ),
          ElevatedButton(
            onPressed: () {
              Navigator.push(context, MaterialPageRoute(builder: (context) => const LabourColonyPage()));
            },
            child: const Text('Labour Colony'),
          ),
        ],
      ),
    );
  }
}

class StpPage extends StatelessWidget {
  const StpPage({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('STP'),
      ),
      body: const Center(child: Text('Not Completed Project under Implementation')),
    );
  }
}

class LabourColonyPage extends StatelessWidget {
  const LabourColonyPage({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Labour Colony Consumption'),
      ),
      body: SingleChildScrollView(
        child: Column(
          children: [
            SizedBox(
              width: double.infinity, // Ensure it takes full width
              child: DataTable(
                columns: const [
                  DataColumn(label: Text('Date')),
                  DataColumn(label: Text('Source')),
                  DataColumn(label: Text('Consumption (KLD)')),
                  DataColumn(label: Text('Discharge')),
                  DataColumn(label: Text('Discharged To')),
                  DataColumn(label: Text('Mode of Transport')),
                ],
                rows: [
                  DataRow(cells: [
                    DataCell(Text('2024-11-01')),
                    DataCell(Text('Borewell')),
                    DataCell(Text('10')),
                    DataCell(Text('Yes')),
                    DataCell(Text('STP')),
                    DataCell(Text('Tanker')),
                  ]),
                  DataRow(cells: [
                    DataCell(Text('2024-11-02')),
                    DataCell(Text('BWSSB')),
                    DataCell(Text('20')),
                    DataCell(Text('No')),
                    DataCell(Text('River')),
                    DataCell(Text('Pipeline')),
                  ]),
                  DataRow(cells: [
                    DataCell(Text('2024-11-03')),
                    DataCell(Text('Tankers')),
                    DataCell(Text('15')),
                    DataCell(Text('Yes')),
                    DataCell(Text('STP')),
                    DataCell(Text('Tanker')),
                  ]),
                  DataRow(cells: [
                    DataCell(Text('2024-11-04')),
                    DataCell(Text('Borewell')),
                    DataCell(Text('12')),
                    DataCell(Text('No')),
                    DataCell(Text('Open Ground')),
                    DataCell(Text('Tanker')),
                  ]),
                  DataRow(cells: [
                    DataCell(Text('2024-11-05')),
                    DataCell(Text('BWSSB')),
                    DataCell(Text('25')),
                    DataCell(Text('Yes')),
                    DataCell(Text('STP')),
                    DataCell(Text('Pipeline')),
                  ]),
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }
}
